C51 COMPILER V9.54   LCD1602                                                               12/08/2021 14:10:26 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN ..\out\LCD1602.obj
COMPILER INVOKED BY: D:\arm\mdk5\C51\BIN\C51.EXE ..\source\LCD1602.C LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND P
                    -RINT(.\LCD1602.lst) OBJECT(..\out\LCD1602.obj)

line level    source

   1          #include"LCD1602.h"
   2          //#include"config.h"
   3          #include"intrins.h"
   4          #include"reg52.h"
   5          
   6          
   7          void Read_Busy();
   8          void LCD1602_Write_Cmd(uchar cmd);//写命令  
   9          void LCD1602_Write_Dat(uchar dat);//写数据
  10          void LCD1602_Clear_Screen();//清屏
  11          void LCD1602_Open_Cursor();//显示光标
  12          void LCD1602_Close_Cursor();//关闭光标
  13          void LCD1602_Set_Cursor(uchar x, uchar y);//设置坐标
  14          void LCD1602_Dis_OneChar(uchar x, uchar y, uchar dat);//输入字符
  15          void LCD1602_Dis_Str(uchar x, uchar y, uchar *str);//输入字符串
  16          void Init_LCD1602();//初始化
  17          
  18          
  19          
  20          
  21          void Read_Busy()
  22          {
  23   1              uchar busy;
  24   1              LCD1602_DB = 0xff;//复位数据总线
  25   1              LCD1602_RS = 0;   //拉低RS
  26   1              LCD1602_RW = 1;   //拉高RW读
  27   1              do
  28   1              {
  29   2                      LCD1602_EN = 1;//使能EN
  30   2                      busy = LCD1602_DB;//读回数据
  31   2                      LCD1602_EN = 0;  //拉低使能以便于下一次产生上升沿
  32   2              }while(busy & 0x80); //判断状态字BIT7位是否为1，为1则表示忙，程序等待
  33   1      }
  34          //写命令
  35          void LCD1602_Write_Cmd(uchar cmd)
  36          {
  37   1              Read_Busy();     //判断忙，忙则等待
  38   1              LCD1602_RS = 0;  //选择为写命令
  39   1              LCD1602_RW = 0; //模式为写
  40   1              LCD1602_DB = cmd;//写入命令
  41   1              LCD1602_EN = 1;  //拉高使能端 数据被传输到LCD1602内
  42   1              LCD1602_EN = 0;  //拉低使能以便于下一次产生上升沿
  43   1      }
  44          //写数据
  45          void LCD1602_Write_Dat(uchar dat)
  46          {
  47   1              Read_Busy();  //判断忙，忙则等待
  48   1              LCD1602_RS = 1; //选择为写数据
  49   1              LCD1602_RW = 0; //模式为写
  50   1              LCD1602_DB = dat; //写入8位数据
  51   1              LCD1602_EN = 1;   //拉高使能端 数据被传输到LCD1602内
  52   1              LCD1602_EN = 0;   //拉低使能以便于下一次产生上升沿
  53   1      }
  54          
C51 COMPILER V9.54   LCD1602                                                               12/08/2021 14:10:26 PAGE 2   

  55          //清屏
  56          
  57          void LCD1602_Clear_Screen()
  58          {
  59   1              LCD1602_Write_Cmd(0x01);
  60   1      }
  61          //显示光标
  62          void LCD1602_Open_Cursor()
  63          {
  64   1              LCD1602_Write_Cmd(0x0F);
  65   1      }
  66          //关闭光标
  67          void LCD1602_Close_Cursor()
  68          {
  69   1              LCD1602_Write_Cmd(0x0C);
  70   1      }
  71          //设置坐标
  72          void LCD1602_Set_Cursor(uchar x, uchar y)
  73          {
  74   1              if(y) x |= 0x40;
  75   1              x |= 0x80;
  76   1              LCD1602_Write_Cmd(x);
  77   1      }
  78          //输入字符
  79          void LCD1602_Dis_OneChar(uchar x, uchar y, uchar dat)
  80          {
  81   1              LCD1602_Set_Cursor(x, y);//设置RAM起始位置
  82   1              LCD1602_Write_Dat(dat);  //写入一个字节的数据   
  83   1      }
  84          //输入字符串
  85          void LCD1602_Dis_Str(uchar x, uchar y, uchar *str)
  86          {
  87   1              LCD1602_Set_Cursor(x, y);//设置RAM起始位置
  88   1              while(*str != '\0')          //写入字符串数据
  89   1              {
  90   2                      LCD1602_Write_Dat(*str++);
  91   2              }
  92   1      }
  93          //初始化
  94          void Init_LCD1602()
  95          {
  96   1              LCD1602_Write_Cmd(0x38); //     设置16*2显示，5*7点阵，8位数据接口
  97   1              LCD1602_Write_Cmd(0x0c); //开显示,关闭光标
  98   1              LCD1602_Write_Cmd(0x06); //读写一字节后地址指针加1
  99   1              LCD1602_Write_Cmd(0x01); // 清屏
 100   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    165    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       3
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
